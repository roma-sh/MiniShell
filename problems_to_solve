								#DONE:
######################################################################################################
# case 1:

#$? (I need the status for the exit code). #:DONE

#I can clean and # Done: I can check for exit codes.

#exit codes :

#you can use the function change_status(t_env **mini_env, int status)
#anywhere you have an error to change the status

#echo "Hello, World!"
#echo $?  # Output: 0 : DONE

#ls nonexistentfile
#echo $?  # Output: 1 DONE

#exit 256
#echo $?  # Output: 2 DONE


#nonexistentcommand
#echo $?  # Output: 127 : DONE

#kill -9 $$
#echo $?  # Output: 137 (This will kill the shell, so you won't see this output)

#sleep 10
# Press Control-C during the sleep
#echo $?  # Output: 130 DONE

#exit 300
#echo $?  # Output: 255 , it is 44 DONE

# the status is not updating if the next command was executed successfully
# it must returned to 0 look at process_manager.c line 50 DONE


# Maybe in builtins there are some error cases which need to
# change the status also, I didn't check that DONE

#signals must be in the builtins also


#> out "ls
#check for seg fault".

# cd to a sub-folder doesn't update PWD with the whole path, it only give /sub-folder-name DONE

# echo $hahahahahaha must print new line only

#cd -- to fix DONE

#cd - at the begining DONE
######################################################################################################

							# MK PROBLEMS
# if only spacessssss : DONE


# minishell >
# minishell: syntax error near unexpected token `|'
# (i wrote one space)


# unset PATH
# cd /bin
# ls   //it should work because the executable is in the current working directroy '/bin'

# echo hi cat >zazaza

# echo hello world > out.txt

# shlvl negative, minishell starts with 0
# if shlvl alphabetica, minishell starts with 1
#cd - -->prints the current pwd (where it took you)

#cd ../../Desktop     // the .. and .  can be as many times inside
#cd ~/Downloads/
#cd ./objs/
#cd to a sub-folder doesn't update PWD with the whole path, it only give /sub-folder-name DONE

#cd -- to fix

#cd - at the begining
# export alone should print alphabetical
#
# declare -x test123="dkgag"
# declare -x test1="hiiiiiiiii"
# declare -x test
# declare -x test="whaaaat"
# -> same first characters of the name of the variable in export and unset.
#
# bash-3.2$ export 35fg dgh kjg 452 fgs
# bash: export: `35fg': not a valid identifier
# bash: export: `452': not a valid identifier
# ->parsing of all arguments in unset and export, not only the first
# "" fixed the seg fault but must print: command not found
# "  "

# !!!!! unset PATH -->anything after, even normal 'ls' segfaults

# (also if the PATH is unset in the terminal session where we launch minishell from, in the beginning)


# ./minishell //inside minishell
#
# Absolute paths for executables, like:
# /usr/bin/wc
# /bin/ls


# cd - -->prints the current pwd (where it took you) DONE

# <>
# |<
# >|
# ><
# >>
# <<

# | ls | cat to fix

# heredoc check with pipes and with
# <<hi wc | cat >zap

# function with 5 parameters
								STILL:

create a function to free the envs.

have to fix the UNSET

SIGNALS IN HEREDOC

<<"af | cat >pm Eleni
<"zi" wc | cat | cat >"ro" seg fault

